/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@harpokrat/client/dist/bundles/harpokrat-client.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@harpokrat/client/dist/bundles/harpokrat-client.js ***!
  \*************************************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/*! CommonJS bailout: module.exports is used directly at 1:65-79 */
/***/ ((module) => {

!function(e,t){ true?module.exports=t():0}(self,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=5)}([function(e,t,r){"use strict";var n,o=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),i=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(o,i){function a(e){try{c(n.next(e))}catch(e){i(e)}}function s(e){try{c(n.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,s)}c((n=n.apply(e,t||[])).next())}))},a=this&&this.__generator||function(e,t){var r,n,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,n&&(o=2&i[0]?n.return:i[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,i[1])).done)return o;switch(n=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,n=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=a.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],n=0}finally{r=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}},s=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0}),t.ResourceEndpoint=void 0;var c=function(e){function t(t,r){return e.call(this,t,r)||this}return o(t,e),t.prototype.resource=function(e,r){return new t(this.api,this.resolvePath(e,r))},t.prototype.relationship=function(e,r){return new t(this.api,this.resolvePath(e,"relationships",r))},t.prototype.create=function(e,t){return i(this,void 0,void 0,(function(){return a(this,(function(r){return[2,this.request(this.path,{method:"POST",body:e},t)]}))}))},t.prototype.delete=function(e,t){return i(this,void 0,void 0,(function(){var r;return a(this,(function(n){switch(n.label){case 0:return r=this.resolvePath(e),[4,this.request(r,{method:"DELETE"},t)];case 1:return n.sent(),[2]}}))}))},t.prototype.read=function(e){return i(this,void 0,void 0,(function(){var t;return a(this,(function(r){return t=this.resolvePath(e),[2,this.request(t,{method:"GET"})]}))}))},t.prototype.readMany=function(e){return void 0===e&&(e={page:1,size:20}),i(this,void 0,void 0,(function(){var t,r,n,o,i,c,u,d,p,l,f,E;return a(this,(function(a){t=e.page,r=e.size,n=e.filters,o=void 0===n?{}:n,i=e.sort,c=e.sortDescending,u={"page[number]":t.toFixed(0),"page[size]":r.toFixed(0)};try{for(d=s(Object.keys(o)),p=d.next();!p.done;p=d.next())l=p.value,u["filter["+l+"]"]=o[l]}catch(e){f={error:e}}finally{try{p&&!p.done&&(E=d.return)&&E.call(d)}finally{if(f)throw f.error}}return i&&(u.sort=c?"-"+i:i),[2,this.request(this.path,{method:"GET",searchParams:u})]}))}))},t.prototype.update=function(e,t,r){return i(this,void 0,void 0,(function(){var n;return a(this,(function(o){return n=this.resolvePath(e),[2,this.request(n,{method:"PATCH",body:t},r)]}))}))},t}(r(1).Endpoint);t.ResourceEndpoint=c},function(e,t,r){"use strict";var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(o,i){function a(e){try{c(n.next(e))}catch(e){i(e)}}function s(e){try{c(n.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,s)}c((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var r,n,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,n&&(o=2&i[0]?n.return:i[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,i[1])).done)return o;switch(n=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,n=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=a.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],n=0}finally{r=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}},i=this&&this.__read||function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,o,i=r.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(n=i.next()).done;)a.push(n.value)}catch(e){o={error:e}}finally{try{n&&!n.done&&(r=i.return)&&r.call(i)}finally{if(o)throw o.error}}return a},a=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(i(arguments[t]));return e};Object.defineProperty(t,"__esModule",{value:!0}),t.Endpoint=void 0;var s=function(){function e(e,t){this.$api=e,this.$path=t}return Object.defineProperty(e.prototype,"path",{get:function(){return this.$path},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"api",{get:function(){return this.$api},enumerable:!1,configurable:!0}),e.prototype.resolvePath=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return a([this.path],e).join("/")},e.prototype.request=function(e,t,r){return void 0===t&&(t={}),void 0===r&&(r={}),n(this,void 0,void 0,(function(){var n,i;return o(this,(function(o){switch(o.label){case 0:return null!=(n=t.body)&&(t.body={data:n,meta:r.meta}),[4,this.$api.requester(e,t)];case 1:return[2,(i=o.sent())&&i.data]}}))}))},e}();t.Endpoint=s},function(e,t,r){"use strict";var n,o=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0}),t.HarpokratError=void 0;var i=function(e){function t(t){return e.call(this,t)||this}return o(t,e),t}(Error);t.HarpokratError=i},function(e,t,r){"use strict";var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(o,i){function a(e){try{c(n.next(e))}catch(e){i(e)}}function s(e){try{c(n.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,s)}c((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var r,n,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,n&&(o=2&i[0]?n.return:i[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,i[1])).done)return o;switch(n=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,n=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=a.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],n=0}finally{r=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}},i=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0}),t.fetchRequester=void 0,t.fetchRequester=function(e,t){var r=void 0===t?{}:t,a=r.body,s=void 0===a?void 0:a,c=r.headers,u=void 0===c?{}:c,d=r.method,p=void 0===d?"GET":d,l=r.searchParams,f=void 0===l?{}:l;return n(void 0,void 0,void 0,(function(){var t,r,n,a,c,d;return o(this,(function(o){switch(o.label){case 0:t=new URL(e);try{for(r=i(Object.keys(f)),n=r.next();!n.done;n=r.next())a=n.value,t.searchParams.set(a,f[a])}catch(e){c={error:e}}finally{try{n&&!n.done&&(d=r.return)&&d.call(r)}finally{if(c)throw c.error}}return[4,fetch(t.href,{mode:"cors",method:p,headers:u,body:s&&JSON.stringify(s)})];case 1:return[4,o.sent().json()];case 2:return[2,o.sent()]}}))}))}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.makeWrappedRequester=void 0,t.makeWrappedRequester=function(e,t,r){return function(n,o){if(void 0===o&&(o={}),!1!==o.hasAuth&&r.accessToken){var i=o.headers||{};i.Authorization||(i.Authorization="Bearer "+r.accessToken),o.headers=i}var a=new URL(n,t);return e(a.href,o)}}},function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&n(t,e,r);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var a=r(2);Object.defineProperty(t,"HarpokratError",{enumerable:!0,get:function(){return a.HarpokratError}}),t.hcl=i(r(6));var s=r(3);Object.defineProperty(t,"fetchRequester",{enumerable:!0,get:function(){return s.fetchRequester}});var c=r(4);Object.defineProperty(t,"makeWrappedRequester",{enumerable:!0,get:function(){return c.makeWrappedRequester}});var u=r(7);Object.defineProperty(t,"HarpokratApi",{enumerable:!0,get:function(){return u.HarpokratApi}})},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0})},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.HarpokratApi=void 0;var n=r(3),o=r(8),i=r(4),a=r(9),s=r(10),c=r(11),u=r(12),d=r(13),p=r(14),l=r(15),f=r(16),E=r(18),_=function(e){void 0===e&&(e={}),this.$options=e,this.auth=e.auth,this.requester=i.makeWrappedRequester(e.requester||n.fetchRequester,e.apiUrl||"https://api.harpokrat.com/v1/",this),this.hcl=new f.HclService(e.hclWasmUrl||"https://static.harpokrat.com/hcl/hcl4.wasm"),this.jsonWebTokens=new o.JsonWebTokensEndpoint(this),this.organizations=new l.OrganizationEndpoint(this),this.groups=new d.GroupEndpoint(this),this.logs=new E.LogEndpoint(this),this.recaptcha=new u.RecaptchaEndpoint(this),this.secrets=new a.SecretEndpoint(this),this.secureActions=new s.SecureActionEndpoint(this),this.users=new c.UserEndpoint(this),this.vaults=new p.VaultEndpoint(this)};t.HarpokratApi=_},function(e,t,r){"use strict";var n,o=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),i=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(o,i){function a(e){try{c(n.next(e))}catch(e){i(e)}}function s(e){try{c(n.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,s)}c((n=n.apply(e,t||[])).next())}))},a=this&&this.__generator||function(e,t){var r,n,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,n&&(o=2&i[0]?n.return:i[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,i[1])).done)return o;switch(n=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,n=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=a.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],n=0}finally{r=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.JsonWebTokensEndpoint=void 0;var s=r(2),c=function(e){function t(t,r){return void 0===r&&(r="json-web-tokens"),e.call(this,t,r)||this}return o(t,e),t.prototype.create=function(){return i(this,void 0,void 0,(function(){var e,t,r,n,o;return a(this,(function(i){switch(i.label){case 0:if(null==this.api.auth)throw new s.HarpokratError("Auth is required to create a JWT");return e=this.api.auth,t=e.email,r=e.password,[4,this.api.hcl.getModule()];case 1:return n=i.sent(),o=n.GetBasicAuthString(t,r),[2,this.request(this.path,{method:"POST",hasAuth:!1,headers:{Authorization:o}})]}}))}))},t}(r(1).Endpoint);t.JsonWebTokensEndpoint=c},function(e,t,r){"use strict";var n,o=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0}),t.SecretEndpoint=void 0;var i=function(e){function t(t,r){return void 0===r&&(r="secrets"),e.call(this,t,r)||this}return o(t,e),t}(r(0).ResourceEndpoint);t.SecretEndpoint=i},function(e,t,r){"use strict";var n,o=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0}),t.SecureActionEndpoint=void 0;var i=function(e){function t(t,r){return void 0===r&&(r="secure-actions"),e.call(this,t,r)||this}return o(t,e),t}(r(0).ResourceEndpoint);t.SecureActionEndpoint=i},function(e,t,r){"use strict";var n,o=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0}),t.UserEndpoint=void 0;var i=function(e){function t(t,r){return void 0===r&&(r="users"),e.call(this,t,r)||this}return o(t,e),t}(r(0).ResourceEndpoint);t.UserEndpoint=i},function(e,t,r){"use strict";var n,o=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0}),t.RecaptchaEndpoint=void 0;var i=function(e){function t(t,r){return void 0===r&&(r="recaptcha"),e.call(this,t,r)||this}return o(t,e),t.prototype.read=function(){return this.request(this.path,{method:"GET",hasAuth:!1})},t}(r(1).Endpoint);t.RecaptchaEndpoint=i},function(e,t,r){"use strict";var n,o=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0}),t.GroupEndpoint=void 0;var i=function(e){function t(t,r){return void 0===r&&(r="groups"),e.call(this,t,r)||this}return o(t,e),t}(r(0).ResourceEndpoint);t.GroupEndpoint=i},function(e,t,r){"use strict";var n,o=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0}),t.VaultEndpoint=void 0;var i=function(e){function t(t,r){return void 0===r&&(r="vaults"),e.call(this,t,r)||this}return o(t,e),t}(r(0).ResourceEndpoint);t.VaultEndpoint=i},function(e,t,r){"use strict";var n,o=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0}),t.OrganizationEndpoint=void 0;var i=function(e){function t(t,r){return void 0===r&&(r="organizations"),e.call(this,t,r)||this}return o(t,e),t}(r(0).ResourceEndpoint);t.OrganizationEndpoint=i},function(e,t,r){"use strict";var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(o,i){function a(e){try{c(n.next(e))}catch(e){i(e)}}function s(e){try{c(n.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,s)}c((n=n.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var r,n,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(r)throw new TypeError("Generator is already executing.");for(;a;)try{if(r=1,n&&(o=2&i[0]?n.return:i[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,i[1])).done)return o;switch(n=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,n=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=a.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],n=0}finally{r=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.HclService=void 0;var a=i(r(17)),s={"private-key":function(e){return e.CastSecretToPassword},"public-key":function(e){return e.CastSecretToPublicKey},"symmetric-key":function(e){return e.CastSecretToSymmetricKey},password:function(e){return e.CastSecretToPassword}},c=function(){function e(e){this.wasmUrl=e}return e.prototype.getModule=function(){return n(this,void 0,void 0,(function(){return o(this,(function(e){return[2,this.module||this.modulePromise]}))}))},e.prototype.init=function(){var e=this;if(null!=this.modulePromise)throw new Error("HCL Module already initialized");this.modulePromise=new Promise((function(t){var r=a.default({noInitialRun:!0,locateFile:function(t){return t.endsWith(".wasm")?e.wasmUrl:t},onRuntimeInitialized:function(){e.module=r,t(e.module)}})}))},e.prototype.cast=function(e){var t=e.GetSecretTypeName(),r=s[t];if(null==r)throw new Error("Invalid Secret Type "+t);return r(this.module)(e)},e}();t.HclService=c},function(e,t,r){"use strict";r.r(t);var n,o=(n="undefined"!=typeof self&&self.currentScript?self.currentScript.src:void 0,function(e){var t,r;(e=void 0!==(e=e||{})?e:{}).ready=new Promise((function(e,n){t=e,r=n})),Object.getOwnPropertyDescriptor(e.ready,"_main")||(Object.defineProperty(e.ready,"_main",{configurable:!0,get:function(){te("You are getting _main on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(e.ready,"_main",{configurable:!0,set:function(){te("You are setting _main on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(e.ready,"_stackSave")||(Object.defineProperty(e.ready,"_stackSave",{configurable:!0,get:function(){te("You are getting _stackSave on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(e.ready,"_stackSave",{configurable:!0,set:function(){te("You are setting _stackSave on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(e.ready,"_stackRestore")||(Object.defineProperty(e.ready,"_stackRestore",{configurable:!0,get:function(){te("You are getting _stackRestore on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(e.ready,"_stackRestore",{configurable:!0,set:function(){te("You are setting _stackRestore on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(e.ready,"_stackAlloc")||(Object.defineProperty(e.ready,"_stackAlloc",{configurable:!0,get:function(){te("You are getting _stackAlloc on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(e.ready,"_stackAlloc",{configurable:!0,set:function(){te("You are setting _stackAlloc on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(e.ready,"___data_end")||(Object.defineProperty(e.ready,"___data_end",{configurable:!0,get:function(){te("You are getting ___data_end on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(e.ready,"___data_end",{configurable:!0,set:function(){te("You are setting ___data_end on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(e.ready,"___wasm_call_ctors")||(Object.defineProperty(e.ready,"___wasm_call_ctors",{configurable:!0,get:function(){te("You are getting ___wasm_call_ctors on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(e.ready,"___wasm_call_ctors",{configurable:!0,set:function(){te("You are setting ___wasm_call_ctors on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(e.ready,"___errno_location")||(Object.defineProperty(e.ready,"___errno_location",{configurable:!0,get:function(){te("You are getting ___errno_location on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(e.ready,"___errno_location",{configurable:!0,set:function(){te("You are setting ___errno_location on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(e.ready,"_malloc")||(Object.defineProperty(e.ready,"_malloc",{configurable:!0,get:function(){te("You are getting _malloc on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(e.ready,"_malloc",{configurable:!0,set:function(){te("You are setting _malloc on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(e.ready,"_free")||(Object.defineProperty(e.ready,"_free",{configurable:!0,get:function(){te("You are getting _free on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(e.ready,"_free",{configurable:!0,set:function(){te("You are setting _free on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(e.ready,"_setThrew")||(Object.defineProperty(e.ready,"_setThrew",{configurable:!0,get:function(){te("You are getting _setThrew on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(e.ready,"_setThrew",{configurable:!0,set:function(){te("You are setting _setThrew on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(e.ready,"__ZSt18uncaught_exceptionv")||(Object.defineProperty(e.ready,"__ZSt18uncaught_exceptionv",{configurable:!0,get:function(){te("You are getting __ZSt18uncaught_exceptionv on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(e.ready,"__ZSt18uncaught_exceptionv",{configurable:!0,set:function(){te("You are setting __ZSt18uncaught_exceptionv on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}})),Object.getOwnPropertyDescriptor(e.ready,"onRuntimeInitialized")||(Object.defineProperty(e.ready,"onRuntimeInitialized",{configurable:!0,get:function(){te("You are getting onRuntimeInitialized on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}),Object.defineProperty(e.ready,"onRuntimeInitialized",{configurable:!0,set:function(){te("You are setting onRuntimeInitialized on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")}}));var o,i={};for(o in e)e.hasOwnProperty(o)&&(i[o]=e[o]);var a=[];if(e.ENVIRONMENT)throw new Error("Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -s ENVIRONMENT=web or -s ENVIRONMENT=node)");var s,c="";if(self.currentScript&&(c=self.currentScript.src),n&&(c=n),c=0!==c.indexOf("blob:")?c.substr(0,c.lastIndexOf("/")+1):"","object"!=typeof self&&"function"!=typeof importScripts)throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");var u=e.print||console.log.bind(console),d=e.printErr||console.warn.bind(console);for(o in i)i.hasOwnProperty(o)&&(e[o]=i[o]);function p(e){p.shown||(p.shown={}),p.shown[e]||(p.shown[e]=1,d(e))}i=null,e.arguments&&(a=e.arguments),Object.getOwnPropertyDescriptor(e,"arguments")||Object.defineProperty(e,"arguments",{configurable:!0,get:function(){te("Module.arguments has been replaced with plain arguments_ (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")}}),e.thisProgram&&e.thisProgram,Object.getOwnPropertyDescriptor(e,"thisProgram")||Object.defineProperty(e,"thisProgram",{configurable:!0,get:function(){te("Module.thisProgram has been replaced with plain thisProgram (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")}}),e.quit&&e.quit,Object.getOwnPropertyDescriptor(e,"quit")||Object.defineProperty(e,"quit",{configurable:!0,get:function(){te("Module.quit has been replaced with plain quit_ (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")}}),O(void 0===e.memoryInitializerPrefixURL,"Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead"),O(void 0===e.pthreadMainPrefixURL,"Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead"),O(void 0===e.cdInitializerPrefixURL,"Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead"),O(void 0===e.filePackagePrefixURL,"Module.filePackagePrefixURL option was removed, use Module.locateFile instead"),O(void 0===e.read,"Module.read option was removed (modify read_ in JS)"),O(void 0===e.readAsync,"Module.readAsync option was removed (modify readAsync in JS)"),O(void 0===e.readBinary,"Module.readBinary option was removed (modify readBinary in JS)"),O(void 0===e.setWindowTitle,"Module.setWindowTitle option was removed (modify setWindowTitle in JS)"),O(void 0===e.TOTAL_MEMORY,"Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY"),Object.getOwnPropertyDescriptor(e,"read")||Object.defineProperty(e,"read",{configurable:!0,get:function(){te("Module.read has been replaced with plain read_ (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")}}),Object.getOwnPropertyDescriptor(e,"readAsync")||Object.defineProperty(e,"readAsync",{configurable:!0,get:function(){te("Module.readAsync has been replaced with plain readAsync (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")}}),Object.getOwnPropertyDescriptor(e,"readBinary")||Object.defineProperty(e,"readBinary",{configurable:!0,get:function(){te("Module.readBinary has been replaced with plain readBinary (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")}}),Object.getOwnPropertyDescriptor(e,"setWindowTitle")||Object.defineProperty(e,"setWindowTitle",{configurable:!0,get:function(){te("Module.setWindowTitle has been replaced with plain setWindowTitle (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")}});var l,f,E,_=0,h=function(e){_=e};e.wasmBinary&&(l=e.wasmBinary),Object.getOwnPropertyDescriptor(e,"wasmBinary")||Object.defineProperty(e,"wasmBinary",{configurable:!0,get:function(){te("Module.wasmBinary has been replaced with plain wasmBinary (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")}}),e.noExitRuntime&&e.noExitRuntime,Object.getOwnPropertyDescriptor(e,"noExitRuntime")||Object.defineProperty(e,"noExitRuntime",{configurable:!0,get:function(){te("Module.noExitRuntime has been replaced with plain noExitRuntime (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")}}),"object"!=typeof WebAssembly&&te("no native wasm support detected");var T=!1;function O(e,t){e||te("Assertion failed: "+t)}var y="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function g(e,t,r){for(var n=t+r,o=t;e[o]&&!(o>=n);)++o;if(o-t>16&&e.subarray&&y)return y.decode(e.subarray(t,o));for(var i="";t<o;){var a=e[t++];if(128&a){var s=63&e[t++];if(192!=(224&a)){var c=63&e[t++];if(224==(240&a)?a=(15&a)<<12|s<<6|c:(240!=(248&a)&&p("Invalid UTF-8 leading byte 0x"+a.toString(16)+" encountered when deserializing a UTF-8 string on the asm.js/wasm heap to a JS string!"),a=(7&a)<<18|s<<12|c<<6|63&e[t++]),a<65536)i+=String.fromCharCode(a);else{var u=a-65536;i+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else i+=String.fromCharCode((31&a)<<6|s)}else i+=String.fromCharCode(a)}return i}function w(e,t){return e?g(m,e,t):""}function R(e,t,r,n){if(!(n>0))return 0;for(var o=r,i=r+n-1,a=0;a<e.length;++a){var s=e.charCodeAt(a);if(s>=55296&&s<=57343&&(s=65536+((1023&s)<<10)|1023&e.charCodeAt(++a)),s<=127){if(r>=i)break;t[r++]=s}else if(s<=2047){if(r+1>=i)break;t[r++]=192|s>>6,t[r++]=128|63&s}else if(s<=65535){if(r+2>=i)break;t[r++]=224|s>>12,t[r++]=128|s>>6&63,t[r++]=128|63&s}else{if(r+3>=i)break;s>=2097152&&p("Invalid Unicode code point 0x"+s.toString(16)+" encountered when serializing a JS string to an UTF-8 string on the asm.js/wasm heap! (Valid unicode code points should be in range 0-0x1FFFFF)."),t[r++]=240|s>>18,t[r++]=128|s>>12&63,t[r++]=128|s>>6&63,t[r++]=128|63&s}}return t[r]=0,r-o}function b(e,t,r){return O("number"==typeof r,"stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!"),R(e,m,t,r)}function D(e){for(var t=0,r=0;r<e.length;++r){var n=e.charCodeAt(r);n>=55296&&n<=57343&&(n=65536+((1023&n)<<10)|1023&e.charCodeAt(++r)),n<=127?++t:t+=n<=2047?2:n<=65535?3:4}return t}var P,A,m,v,M,S,F,I,X,j="undefined"!=typeof TextDecoder?new TextDecoder("utf-16le"):void 0;function x(e,t){O(e%2==0,"Pointer passed to UTF16ToString must be aligned to two bytes!");for(var r=e,n=r>>1,o=n+t/2;!(n>=o)&&M[n];)++n;if((r=n<<1)-e>32&&j)return j.decode(m.subarray(e,r));for(var i=0,a="";;){var s=v[e+2*i>>1];if(0==s||i==t/2)return a;++i,a+=String.fromCharCode(s)}}function U(e,t,r){if(O(t%2==0,"Pointer passed to stringToUTF16 must be aligned to two bytes!"),O("number"==typeof r,"stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!"),void 0===r&&(r=2147483647),r<2)return 0;for(var n=t,o=(r-=2)<2*e.length?r/2:e.length,i=0;i<o;++i){var a=e.charCodeAt(i);v[t>>1]=a,t+=2}return v[t>>1]=0,t-n}function N(e){return 2*e.length}function H(e,t){O(e%4==0,"Pointer passed to UTF32ToString must be aligned to four bytes!");for(var r=0,n="";!(r>=t/4);){var o=S[e+4*r>>2];if(0==o)break;if(++r,o>=65536){var i=o-65536;n+=String.fromCharCode(55296|i>>10,56320|1023&i)}else n+=String.fromCharCode(o)}return n}function C(e,t,r){if(O(t%4==0,"Pointer passed to stringToUTF32 must be aligned to four bytes!"),O("number"==typeof r,"stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!"),void 0===r&&(r=2147483647),r<4)return 0;for(var n=t,o=n+r-4,i=0;i<e.length;++i){var a=e.charCodeAt(i);if(a>=55296&&a<=57343&&(a=65536+((1023&a)<<10)|1023&e.charCodeAt(++i)),S[t>>2]=a,(t+=4)+4>o)break}return S[t>>2]=0,t-n}function Q(e){for(var t=0,r=0;r<e.length;++r){var n=e.charCodeAt(r);n>=55296&&n<=57343&&++r,t+=4}return t}O(!0,"stack must start aligned"),e.TOTAL_STACK&&O(5242880===e.TOTAL_STACK,"the stack size can no longer be determined at runtime");var k,L=e.INITIAL_MEMORY||16777216;function W(){O(!0),F[10533]=34821223,F[10534]=2310721022,S[0]=1668509029}function $(){var e=F[10533],t=F[10534];34821223==e&&2310721022==t||te("Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x2135467, but received 0x"+t.toString(16)+" "+e.toString(16)),1668509029!==S[0]&&te("Runtime error: The application has corrupted its heap memory area (address zero)!")}Object.getOwnPropertyDescriptor(e,"INITIAL_MEMORY")||Object.defineProperty(e,"INITIAL_MEMORY",{configurable:!0,get:function(){te("Module.INITIAL_MEMORY has been replaced with plain INITIAL_INITIAL_MEMORY (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")}}),O(L>=5242880,"INITIAL_MEMORY should be larger than TOTAL_STACK, was "+L+"! (TOTAL_STACK=5242880)"),O("undefined"!=typeof Int32Array&&"undefined"!=typeof Float64Array&&void 0!==Int32Array.prototype.subarray&&void 0!==Int32Array.prototype.set,"JS engine does not provide full typed array support"),(f=e.wasmMemory?e.wasmMemory:new WebAssembly.Memory({initial:L/65536,maximum:L/65536}))&&(P=f.buffer),O((L=P.byteLength)%65536==0),P=k=P,e.HEAP8=A=new Int8Array(k),e.HEAP16=v=new Int16Array(k),e.HEAP32=S=new Int32Array(k),e.HEAPU8=m=new Uint8Array(k),e.HEAPU16=M=new Uint16Array(k),e.HEAPU32=F=new Uint32Array(k),e.HEAPF32=I=new Float32Array(k),e.HEAPF64=X=new Float64Array(k),function(){var e=new Int16Array(1),t=new Int8Array(e.buffer);if(e[0]=25459,115!==t[0]||99!==t[1])throw"Runtime error: expected the system to be little-endian!"}();var G=[],B=[],z=[],Y=[],V=!1,q=!1;O(Math.imul,"This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),O(Math.fround,"This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),O(Math.clz32,"This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),O(Math.trunc,"This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),Math.abs,Math.cos,Math.sin,Math.tan,Math.acos,Math.asin,Math.atan,Math.atan2,Math.exp,Math.log,Math.sqrt,Math.ceil,Math.floor,Math.pow,Math.imul,Math.fround,Math.round,Math.min,Math.max,Math.clz32,Math.trunc;var Z=0,J=null,K=null,ee={};function te(t){var n;e.onAbort&&e.onAbort(t),d(t+=""),T=!0,t="abort("+t+") at "+(n=function(){var e=new Error;if(!e.stack){try{throw new Error}catch(t){e=t}if(!e.stack)return"(no stack trace available)"}return e.stack.toString()}(),e.extraStackTrace&&(n+="\n"+e.extraStackTrace()),n.replace(/\b_Z[\w\d_]+/g,(function(e){var t,r=(t=e,p("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling"),t);return e===r?e:r+" ["+e+"]"})));var o=new WebAssembly.RuntimeError(t);throw r(o),o}e.preloadedImages={},e.preloadedAudios={};var re={error:function(){te("Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with  -s FORCE_FILESYSTEM=1")},init:function(){re.error()},createDataFile:function(){re.error()},createPreloadedFile:function(){re.error()},createLazyFile:function(){re.error()},open:function(){re.error()},mkdev:function(){re.error()},registerDevice:function(){re.error()},analyzePath:function(){re.error()},loadFilesFromDB:function(){re.error()},ErrnoError:function(){re.error()}};function ne(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}function oe(e){return ne(e,"data:application/octet-stream;base64,")}function ie(t,r){return function(){var n=t,o=r;return r||(o=e.asm),O(V,"native function `"+n+"` called before runtime initialization"),O(!q,"native function `"+n+"` called after runtime exit (use NO_EXIT_RUNTIME to keep it alive after main() exits)"),o[t]||O(o[t],"exported native function `"+n+"` not found"),o[t].apply(null,arguments)}}e.FS_createDataFile=re.createDataFile,e.FS_createPreloadedFile=re.createPreloadedFile;var ae,se="hcl.wasm";function ce(){try{if(l)return new Uint8Array(l);if(s)return s(se);throw"both async and sync fetching of the wasm failed"}catch(e){te(e)}}function ue(t){for(;t.length>0;){var r=t.shift();if("function"!=typeof r){var n=r.func;"number"==typeof n?void 0===r.arg?E.get(n)():E.get(n)(r.arg):n(void 0===r.arg?null:r.arg)}else r(e)}}function de(t,r,n){return-1!=t.indexOf("j")?function(t,r,n){return O("dynCall_"+t in e,"bad function pointer type - no table for sig '"+t+"'"),n&&n.length?O(n.length===t.substring(1).replace(/j/g,"--").length):O(1==t.length),n&&n.length?e["dynCall_"+t].apply(null,[r].concat(n)):e["dynCall_"+t].call(null,r)}(t,r,n):E.get(r).apply(null,n)}oe(se)||(ae=se,se=e.locateFile?e.locateFile(ae,c):c+ae);var pe=0,le=4,fe=8,Ee=12,_e=13,he=16,Te=0;function Oe(e){this.excPtr=e,this.ptr=e-he,this.set_type=function(e){S[this.ptr+fe>>2]=e},this.get_type=function(){return S[this.ptr+fe>>2]},this.set_destructor=function(e){S[this.ptr+pe>>2]=e},this.get_destructor=function(){return S[this.ptr+pe>>2]},this.set_refcount=function(e){S[this.ptr+le>>2]=e},this.set_caught=function(e){e=e?1:0,A[this.ptr+Ee>>0]=e},this.get_caught=function(){return 0!=A[this.ptr+Ee>>0]},this.set_rethrown=function(e){e=e?1:0,A[this.ptr+_e>>0]=e},this.get_rethrown=function(){return 0!=A[this.ptr+_e>>0]},this.init=function(e,t){this.set_type(e),this.set_destructor(t),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var e=S[this.ptr+le>>2];S[this.ptr+le>>2]=e+1},this.release_ref=function(){var e=S[this.ptr+le>>2];return S[this.ptr+le>>2]=e-1,O(e>0),1===e}}function ye(e){this.free=function(){Nt(this.ptr),this.ptr=0},this.set_base_ptr=function(e){S[this.ptr>>2]=e},this.get_base_ptr=function(){return S[this.ptr>>2]},this.set_adjusted_ptr=function(e){S[this.ptr+4>>2]=e},this.get_adjusted_ptr=function(){return S[this.ptr+4>>2]},this.get_exception_ptr=function(){if(___cxa_is_pointer_type(this.get_exception_info().get_type()))return S[this.get_base_ptr()>>2];var e=this.get_adjusted_ptr();return 0!==e?e:this.get_base_ptr()},this.get_exception_info=function(){return new Oe(this.get_base_ptr())},void 0===e?(this.ptr=Ut(8),this.set_adjusted_ptr(0)):this.ptr=e}function ge(e){switch(e){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError("Unknown type size: "+e)}}var we=void 0;function Re(e){for(var t="",r=e;m[r];)t+=we[m[r++]];return t}var be={},De={},Pe={};function Ae(e){if(void 0===e)return"_unknown";var t=(e=e.replace(/[^a-zA-Z0-9_]/g,"$")).charCodeAt(0);return t>=48&&t<=57?"_"+e:e}function me(e,t){return e=Ae(e),new Function("body","return function "+e+'() {\n    "use strict";    return body.apply(this, arguments);\n};\n')(t)}function ve(e,t){var r=me(t,(function(e){this.name=t,this.message=e;var r=new Error(e).stack;void 0!==r&&(this.stack=this.toString()+"\n"+r.replace(/^Error(:[^\n]*)?\n/,""))}));return r.prototype=Object.create(e.prototype),r.prototype.constructor=r,r.prototype.toString=function(){return void 0===this.message?this.name:this.name+": "+this.message},r}var Me=void 0;function Se(e){throw new Me(e)}var Fe=void 0;function Ie(e){throw new Fe(e)}function Xe(e,t,r){function n(t){var n=r(t);n.length!==e.length&&Ie("Mismatched type converter count");for(var o=0;o<e.length;++o)je(e[o],n[o])}e.forEach((function(e){Pe[e]=t}));var o=new Array(t.length),i=[],a=0;t.forEach((function(e,t){De.hasOwnProperty(e)?o[t]=De[e]:(i.push(e),be.hasOwnProperty(e)||(be[e]=[]),be[e].push((function(){o[t]=De[e],++a===i.length&&n(o)})))})),0===i.length&&n(o)}function je(e,t,r){if(r=r||{},!("argPackAdvance"in t))throw new TypeError("registerType registeredInstance requires argPackAdvance");var n=t.name;if(e||Se('type "'+n+'" must have a positive integer typeid pointer'),De.hasOwnProperty(e)){if(r.ignoreDuplicateRegistrations)return;Se("Cannot register type '"+n+"' twice")}if(De[e]=t,delete Pe[e],be.hasOwnProperty(e)){var o=be[e];delete be[e],o.forEach((function(e){e()}))}}function xe(e){if(!(this instanceof Ye))return!1;if(!(e instanceof Ye))return!1;for(var t=this.$$.ptrType.registeredClass,r=this.$$.ptr,n=e.$$.ptrType.registeredClass,o=e.$$.ptr;t.baseClass;)r=t.upcast(r),t=t.baseClass;for(;n.baseClass;)o=n.upcast(o),n=n.baseClass;return t===n&&r===o}function Ue(e){Se(e.$$.ptrType.registeredClass.name+" instance already deleted")}var Ne=!1;function He(e){}function Ce(e){e.count.value-=1,0===e.count.value&&function(e){e.smartPtr?e.smartPtrType.rawDestructor(e.smartPtr):e.ptrType.registeredClass.rawDestructor(e.ptr)}(e)}function Qe(e){return"undefined"==typeof FinalizationGroup?(Qe=function(e){return e},e):(Ne=new FinalizationGroup((function(e){for(var t=e.next();!t.done;t=e.next()){var r=t.value;r.ptr?Ce(r):console.warn("object already deleted: "+r.ptr)}})),He=function(e){Ne.unregister(e.$$)},(Qe=function(e){return Ne.register(e,e.$$,e.$$),e})(e))}function ke(){if(this.$$.ptr||Ue(this),this.$$.preservePointerOnDelete)return this.$$.count.value+=1,this;var e,t=Qe(Object.create(Object.getPrototypeOf(this),{$$:{value:(e=this.$$,{count:e.count,deleteScheduled:e.deleteScheduled,preservePointerOnDelete:e.preservePointerOnDelete,ptr:e.ptr,ptrType:e.ptrType,smartPtr:e.smartPtr,smartPtrType:e.smartPtrType})}}));return t.$$.count.value+=1,t.$$.deleteScheduled=!1,t}function Le(){this.$$.ptr||Ue(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&Se("Object already scheduled for deletion"),He(this),Ce(this.$$),this.$$.preservePointerOnDelete||(this.$$.smartPtr=void 0,this.$$.ptr=void 0)}function We(){return!this.$$.ptr}var $e=void 0,Ge=[];function Be(){for(;Ge.length;){var e=Ge.pop();e.$$.deleteScheduled=!1,e.delete()}}function ze(){return this.$$.ptr||Ue(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&Se("Object already scheduled for deletion"),Ge.push(this),1===Ge.length&&$e&&$e(Be),this.$$.deleteScheduled=!0,this}function Ye(){}var Ve={};function qe(e,t,r){if(void 0===e[t].overloadTable){var n=e[t];e[t]=function(){return e[t].overloadTable.hasOwnProperty(arguments.length)||Se("Function '"+r+"' called with an invalid number of arguments ("+arguments.length+") - expects one of ("+e[t].overloadTable+")!"),e[t].overloadTable[arguments.length].apply(this,arguments)},e[t].overloadTable=[],e[t].overloadTable[n.argCount]=n}}function Ze(t,r,n){e.hasOwnProperty(t)?((void 0===n||void 0!==e[t].overloadTable&&void 0!==e[t].overloadTable[n])&&Se("Cannot register public name '"+t+"' twice"),qe(e,t,t),e.hasOwnProperty(n)&&Se("Cannot register multiple overloads of a function with the same number of arguments ("+n+")!"),e[t].overloadTable[n]=r):(e[t]=r,void 0!==n&&(e[t].numArguments=n))}function Je(e,t,r,n,o,i,a,s){this.name=e,this.constructor=t,this.instancePrototype=r,this.rawDestructor=n,this.baseClass=o,this.getActualType=i,this.upcast=a,this.downcast=s,this.pureVirtualFunctions=[]}function Ke(e,t,r){for(;t!==r;)t.upcast||Se("Expected null or instance of "+r.name+", got an instance of "+t.name),e=t.upcast(e),t=t.baseClass;return e}function et(e,t){if(null===t)return this.isReference&&Se("null is not a valid "+this.name),0;t.$$||Se('Cannot pass "'+vt(t)+'" as a '+this.name),t.$$.ptr||Se("Cannot pass deleted object as a pointer of type "+this.name);var r=t.$$.ptrType.registeredClass;return Ke(t.$$.ptr,r,this.registeredClass)}function tt(e,t){var r;if(null===t)return this.isReference&&Se("null is not a valid "+this.name),this.isSmartPointer?(r=this.rawConstructor(),null!==e&&e.push(this.rawDestructor,r),r):0;t.$$||Se('Cannot pass "'+vt(t)+'" as a '+this.name),t.$$.ptr||Se("Cannot pass deleted object as a pointer of type "+this.name),!this.isConst&&t.$$.ptrType.isConst&&Se("Cannot convert argument of type "+(t.$$.smartPtrType?t.$$.smartPtrType.name:t.$$.ptrType.name)+" to parameter type "+this.name);var n=t.$$.ptrType.registeredClass;if(r=Ke(t.$$.ptr,n,this.registeredClass),this.isSmartPointer)switch(void 0===t.$$.smartPtr&&Se("Passing raw pointer to smart pointer is illegal"),this.sharingPolicy){case 0:t.$$.smartPtrType===this?r=t.$$.smartPtr:Se("Cannot convert argument of type "+(t.$$.smartPtrType?t.$$.smartPtrType.name:t.$$.ptrType.name)+" to parameter type "+this.name);break;case 1:r=t.$$.smartPtr;break;case 2:if(t.$$.smartPtrType===this)r=t.$$.smartPtr;else{var o=t.clone();r=this.rawShare(r,mt((function(){o.delete()}))),null!==e&&e.push(this.rawDestructor,r)}break;default:Se("Unsupporting sharing policy")}return r}function rt(e,t){if(null===t)return this.isReference&&Se("null is not a valid "+this.name),0;t.$$||Se('Cannot pass "'+vt(t)+'" as a '+this.name),t.$$.ptr||Se("Cannot pass deleted object as a pointer of type "+this.name),t.$$.ptrType.isConst&&Se("Cannot convert argument of type "+t.$$.ptrType.name+" to parameter type "+this.name);var r=t.$$.ptrType.registeredClass;return Ke(t.$$.ptr,r,this.registeredClass)}function nt(e){return this.fromWireType(F[e>>2])}function ot(e){return this.rawGetPointee&&(e=this.rawGetPointee(e)),e}function it(e){this.rawDestructor&&this.rawDestructor(e)}function at(e){null!==e&&e.delete()}function st(){return Object.keys(dt).length}function ct(){var e=[];for(var t in dt)dt.hasOwnProperty(t)&&e.push(dt[t]);return e}function ut(e){$e=e,Ge.length&&$e&&$e(Be)}var dt={};function pt(e,t){return t=function(e,t){for(void 0===t&&Se("ptr should not be undefined");e.baseClass;)t=e.upcast(t),e=e.baseClass;return t}(e,t),dt[t]}function lt(e,t){return t.ptrType&&t.ptr||Ie("makeClassHandle requires ptr and ptrType"),!!t.smartPtrType!=!!t.smartPtr&&Ie("Both smartPtrType and smartPtr must be specified"),t.count={value:1},Qe(Object.create(e,{$$:{value:t}}))}function ft(e){var t=this.getPointee(e);if(!t)return this.destructor(e),null;var r=pt(this.registeredClass,t);if(void 0!==r){if(0===r.$$.count.value)return r.$$.ptr=t,r.$$.smartPtr=e,r.clone();var n=r.clone();return this.destructor(e),n}function o(){return this.isSmartPointer?lt(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:t,smartPtrType:this,smartPtr:e}):lt(this.registeredClass.instancePrototype,{ptrType:this,ptr:e})}var i,a=this.registeredClass.getActualType(t),s=Ve[a];if(!s)return o.call(this);i=this.isConst?s.constPointerType:s.pointerType;var c=function e(t,r,n){if(r===n)return t;if(void 0===n.baseClass)return null;var o=e(t,r,n.baseClass);return null===o?null:n.downcast(o)}(t,this.registeredClass,i.registeredClass);return null===c?o.call(this):this.isSmartPointer?lt(i.registeredClass.instancePrototype,{ptrType:i,ptr:c,smartPtrType:this,smartPtr:e}):lt(i.registeredClass.instancePrototype,{ptrType:i,ptr:c})}function Et(e,t,r,n,o,i,a,s,c,u,d){this.name=e,this.registeredClass=t,this.isReference=r,this.isConst=n,this.isSmartPointer=o,this.pointeeType=i,this.sharingPolicy=a,this.rawGetPointee=s,this.rawConstructor=c,this.rawShare=u,this.rawDestructor=d,o||void 0!==t.baseClass?this.toWireType=tt:n?(this.toWireType=et,this.destructorFunction=null):(this.toWireType=rt,this.destructorFunction=null)}function _t(t,r,n){e.hasOwnProperty(t)||Ie("Replacing nonexistant public symbol"),void 0!==e[t].overloadTable&&void 0!==n?e[t].overloadTable[n]=r:(e[t]=r,e[t].argCount=n)}function ht(e,t){var r=-1!=(e=Re(e)).indexOf("j")?function(e,t){O(e.indexOf("j")>=0,"getDynCaller should only be called with i64 sigs");var r=[];return function(){r.length=arguments.length;for(var n=0;n<arguments.length;n++)r[n]=arguments[n];return de(e,t,r)}}(e,t):E.get(t);return"function"!=typeof r&&Se("unknown function pointer with signature "+e+": "+t),r}var Tt=void 0;function Ot(e){var t=Ht(e),r=Re(t);return Nt(t),r}function yt(e,t){var r=[],n={};throw t.forEach((function e(t){n[t]||De[t]||(Pe[t]?Pe[t].forEach(e):(r.push(t),n[t]=!0))})),new Tt(e+": "+r.map(Ot).join([", "]))}function gt(e){for(;e.length;){var t=e.pop();e.pop()(t)}}function wt(e,t,r,n,o){var i=t.length;i<2&&Se("argTypes array size mismatch! Must at least get return value and 'this' types!");for(var a=null!==t[1]&&null!==r,s=!1,c=1;c<t.length;++c)if(null!==t[c]&&void 0===t[c].destructorFunction){s=!0;break}var u="void"!==t[0].name,d="",p="";for(c=0;c<i-2;++c)d+=(0!==c?", ":"")+"arg"+c,p+=(0!==c?", ":"")+"arg"+c+"Wired";var l="return function "+Ae(e)+"("+d+") {\nif (arguments.length !== "+(i-2)+") {\nthrowBindingError('function "+e+" called with ' + arguments.length + ' arguments, expected "+(i-2)+" args!');\n}\n";s&&(l+="var destructors = [];\n");var f=s?"destructors":"null",E=["throwBindingError","invoker","fn","runDestructors","retType","classParam"],_=[Se,n,o,gt,t[0],t[1]];for(a&&(l+="var thisWired = classParam.toWireType("+f+", this);\n"),c=0;c<i-2;++c)l+="var arg"+c+"Wired = argType"+c+".toWireType("+f+", arg"+c+"); // "+t[c+2].name+"\n",E.push("argType"+c),_.push(t[c+2]);if(a&&(p="thisWired"+(p.length>0?", ":"")+p),l+=(u?"var rv = ":"")+"invoker(fn"+(p.length>0?", ":"")+p+");\n",s)l+="runDestructors(destructors);\n";else for(c=a?1:2;c<t.length;++c){var h=1===c?"thisWired":"arg"+(c-2)+"Wired";null!==t[c].destructorFunction&&(l+=h+"_dtor("+h+"); // "+t[c].name+"\n",E.push(h+"_dtor"),_.push(t[c].destructorFunction))}return u&&(l+="var ret = retType.fromWireType(rv);\nreturn ret;\n"),l+="}\n",E.push(l),function(e,t){if(!(e instanceof Function))throw new TypeError("new_ called with constructor type "+typeof e+" which is not a function");var r=me(e.name||"unknownFunctionName",(function(){}));r.prototype=e.prototype;var n=new r,o=e.apply(n,t);return o instanceof Object?o:n}(Function,E).apply(null,_)}function Rt(e,t){for(var r=[],n=0;n<e;n++)r.push(S[(t>>2)+n]);return r}var bt=[],Dt=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function Pt(){for(var e=0,t=5;t<Dt.length;++t)void 0!==Dt[t]&&++e;return e}function At(){for(var e=5;e<Dt.length;++e)if(void 0!==Dt[e])return Dt[e];return null}function mt(e){switch(e){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var t=bt.length?bt.pop():Dt.length;return Dt[t]={refcount:1,value:e},t}}function vt(e){if(null===e)return"null";var t=typeof e;return"object"===t||"array"===t||"function"===t?e.toString():""+e}function Mt(e,t){switch(t){case 2:return function(e){return this.fromWireType(I[e>>2])};case 3:return function(e){return this.fromWireType(X[e>>3])};default:throw new TypeError("Unknown float type: "+e)}}function St(e,t,r){switch(t){case 0:return r?function(e){return A[e]}:function(e){return m[e]};case 1:return r?function(e){return v[e>>1]}:function(e){return M[e>>1]};case 2:return r?function(e){return S[e>>2]}:function(e){return F[e>>2]};default:throw new TypeError("Unknown integer type: "+e)}}var Ft={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var r=Ft.buffers[e];O(r),0===t||10===t?((1===e?u:d)(g(r,0)),r.length=0):r.push(t)},varargs:void 0,get:function(){return O(null!=Ft.varargs),Ft.varargs+=4,S[Ft.varargs-4>>2]},getStr:function(e){return w(e)},get64:function(e,t){return O(e>=0?0===t:-1===t),e}},It=52;!function(){for(var e=new Array(256),t=0;t<256;++t)e[t]=String.fromCharCode(t);we=e}(),Me=e.BindingError=ve(Error,"BindingError"),Fe=e.InternalError=ve(Error,"InternalError"),Ye.prototype.isAliasOf=xe,Ye.prototype.clone=ke,Ye.prototype.delete=Le,Ye.prototype.isDeleted=We,Ye.prototype.deleteLater=ze,Et.prototype.getPointee=ot,Et.prototype.destructor=it,Et.prototype.argPackAdvance=8,Et.prototype.readValueFromPointer=nt,Et.prototype.deleteObject=at,Et.prototype.fromWireType=ft,e.getInheritedInstanceCount=st,e.getLiveInheritedInstances=ct,e.flushPendingDeletes=Be,e.setDelayFunction=ut,Tt=e.UnboundTypeError=ve(Error,"UnboundTypeError"),e.count_emval_handles=Pt,e.get_first_emval=At,B.push({func:function(){xt()}});var Xt,jt={__cxa_allocate_exception:function(e){return Ut(e+he)+he},__cxa_atexit:function(e,t){},__cxa_find_matching_catch_2:function(){var e=Te;if(!e)return 0|(h(0),0);var t=new Oe(e),r=t.get_type(),n=new ye;if(n.set_base_ptr(e),!r)return 0|(h(0),n.ptr);var o=Array.prototype.slice.call(arguments),i=Qt(),a=Lt(4);S[a>>2]=e;for(var s=0;s<o.length;s++){var c=o[s];if(0===c||c===r)break;if(___cxa_can_catch(c,r,a)){var u=S[a>>2];return e!==u&&n.set_adjusted_ptr(u),0|(h(c),n.ptr)}}return kt(i),0|(h(r),n.ptr)},__cxa_free_exception:function(e){try{return Nt(new Oe(e).ptr)}catch(e){d("exception during cxa_free_exception: "+e)}},__cxa_throw:function(e,t,r){throw new Oe(e).init(t,r),Te=e,"uncaught_exception"in $t?$t.uncaught_exceptions++:$t.uncaught_exceptions=1,e},__cxa_uncaught_exceptions:function(){return $t.uncaught_exceptions},__resumeException:function(e){var t=new ye(e),r=t.get_base_ptr();throw Te||(Te=r),t.free(),r},_embind_register_bool:function(e,t,r,n,o){var i=ge(r);je(e,{name:t=Re(t),fromWireType:function(e){return!!e},toWireType:function(e,t){return t?n:o},argPackAdvance:8,readValueFromPointer:function(e){var n;if(1===r)n=A;else if(2===r)n=v;else{if(4!==r)throw new TypeError("Unknown boolean type size: "+t);n=S}return this.fromWireType(n[e>>i])},destructorFunction:null})},_embind_register_class:function(e,t,r,n,o,i,a,s,c,u,d,p,l){d=Re(d),i=ht(o,i),s&&(s=ht(a,s)),u&&(u=ht(c,u)),l=ht(p,l);var f=Ae(d);Ze(f,(function(){yt("Cannot construct "+d+" due to unbound types",[n])})),Xe([e,t,r],n?[n]:[],(function(t){var r,o;t=t[0],o=n?(r=t.registeredClass).instancePrototype:Ye.prototype;var a=me(f,(function(){if(Object.getPrototypeOf(this)!==c)throw new Me("Use 'new' to construct "+d);if(void 0===p.constructor_body)throw new Me(d+" has no accessible constructor");var e=p.constructor_body[arguments.length];if(void 0===e)throw new Me("Tried to invoke ctor of "+d+" with invalid number of parameters ("+arguments.length+") - expected ("+Object.keys(p.constructor_body).toString()+") parameters instead!");return e.apply(this,arguments)})),c=Object.create(o,{constructor:{value:a}});a.prototype=c;var p=new Je(d,a,c,l,r,i,s,u),E=new Et(d,p,!0,!1,!1),_=new Et(d+"*",p,!1,!1,!1),h=new Et(d+" const*",p,!1,!0,!1);return Ve[e]={pointerType:_,constPointerType:h},_t(f,a),[E,_,h]}))},_embind_register_class_class_function:function(e,t,r,n,o,i,a){var s=Rt(r,n);t=Re(t),i=ht(o,i),Xe([],[e],(function(e){var n=(e=e[0]).name+"."+t;function o(){yt("Cannot call "+n+" due to unbound types",s)}var c=e.registeredClass.constructor;return void 0===c[t]?(o.argCount=r-1,c[t]=o):(qe(c,t,n),c[t].overloadTable[r-1]=o),Xe([],s,(function(e){var o=[e[0],null].concat(e.slice(1)),s=wt(n,o,null,i,a);return void 0===c[t].overloadTable?(s.argCount=r-1,c[t]=s):c[t].overloadTable[r-1]=s,[]})),[]}))},_embind_register_class_constructor:function(e,t,r,n,o,i){O(t>0);var a=Rt(t,r);o=ht(n,o);var s=[i],c=[];Xe([],[e],(function(e){var r="constructor "+(e=e[0]).name;if(void 0===e.registeredClass.constructor_body&&(e.registeredClass.constructor_body=[]),void 0!==e.registeredClass.constructor_body[t-1])throw new Me("Cannot register multiple constructors with identical number of parameters ("+(t-1)+") for class '"+e.name+"'! Overload resolution is currently only performed using the parameter count, not actual type info!");return e.registeredClass.constructor_body[t-1]=function(){yt("Cannot construct "+e.name+" due to unbound types",a)},Xe([],a,(function(n){return e.registeredClass.constructor_body[t-1]=function(){arguments.length!==t-1&&Se(r+" called with "+arguments.length+" arguments, expected "+(t-1)),c.length=0,s.length=t;for(var e=1;e<t;++e)s[e]=n[e].toWireType(c,arguments[e-1]);var i=o.apply(null,s);return gt(c),n[0].fromWireType(i)},[]})),[]}))},_embind_register_class_function:function(e,t,r,n,o,i,a,s){var c=Rt(r,n);t=Re(t),i=ht(o,i),Xe([],[e],(function(e){var n=(e=e[0]).name+"."+t;function o(){yt("Cannot call "+n+" due to unbound types",c)}s&&e.registeredClass.pureVirtualFunctions.push(t);var u=e.registeredClass.instancePrototype,d=u[t];return void 0===d||void 0===d.overloadTable&&d.className!==e.name&&d.argCount===r-2?(o.argCount=r-2,o.className=e.name,u[t]=o):(qe(u,t,n),u[t].overloadTable[r-2]=o),Xe([],c,(function(o){var s=wt(n,o,e,i,a);return void 0===u[t].overloadTable?(s.argCount=r-2,u[t]=s):u[t].overloadTable[r-2]=s,[]})),[]}))},_embind_register_emval:function(e,t){je(e,{name:t=Re(t),fromWireType:function(e){var t=Dt[e].value;return function(e){e>4&&0==--Dt[e].refcount&&(Dt[e]=void 0,bt.push(e))}(e),t},toWireType:function(e,t){return mt(t)},argPackAdvance:8,readValueFromPointer:nt,destructorFunction:null})},_embind_register_float:function(e,t,r){var n=ge(r);je(e,{name:t=Re(t),fromWireType:function(e){return e},toWireType:function(e,t){if("number"!=typeof t&&"boolean"!=typeof t)throw new TypeError('Cannot convert "'+vt(t)+'" to '+this.name);return t},argPackAdvance:8,readValueFromPointer:Mt(t,n),destructorFunction:null})},_embind_register_function:function(e,t,r,n,o,i){var a=Rt(t,r);e=Re(e),o=ht(n,o),Ze(e,(function(){yt("Cannot call "+e+" due to unbound types",a)}),t-1),Xe([],a,(function(r){var n=[r[0],null].concat(r.slice(1));return _t(e,wt(e,n,null,o,i),t-1),[]}))},_embind_register_integer:function(e,t,r,n,o){t=Re(t),-1===o&&(o=4294967295);var i=ge(r),a=function(e){return e};if(0===n){var s=32-8*r;a=function(e){return e<<s>>>s}}var c=-1!=t.indexOf("unsigned");je(e,{name:t,fromWireType:a,toWireType:function(e,r){if("number"!=typeof r&&"boolean"!=typeof r)throw new TypeError('Cannot convert "'+vt(r)+'" to '+this.name);if(r<n||r>o)throw new TypeError('Passing a number "'+vt(r)+'" from JS side to C/C++ side to an argument of type "'+t+'", which is outside the valid range ['+n+", "+o+"]!");return c?r>>>0:0|r},argPackAdvance:8,readValueFromPointer:St(t,i,0!==n),destructorFunction:null})},_embind_register_memory_view:function(e,t,r){var n=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][t];function o(e){var t=F,r=t[e>>=2],o=t[e+1];return new n(P,o,r)}je(e,{name:r=Re(r),fromWireType:o,argPackAdvance:8,readValueFromPointer:o},{ignoreDuplicateRegistrations:!0})},_embind_register_std_string:function(e,t){var r="std::string"===(t=Re(t));je(e,{name:t,fromWireType:function(e){var t,n=F[e>>2];if(r)for(var o=e+4,i=0;i<=n;++i){var a=e+4+i;if(i==n||0==m[a]){var s=w(o,a-o);void 0===t?t=s:(t+=String.fromCharCode(0),t+=s),o=a+1}}else{var c=new Array(n);for(i=0;i<n;++i)c[i]=String.fromCharCode(m[e+4+i]);t=c.join("")}return Nt(e),t},toWireType:function(e,t){t instanceof ArrayBuffer&&(t=new Uint8Array(t));var n="string"==typeof t;n||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int8Array||Se("Cannot pass non-string to std::string");var o=(r&&n?function(){return D(t)}:function(){return t.length})(),i=Ut(4+o+1);if(F[i>>2]=o,r&&n)b(t,i+4,o+1);else if(n)for(var a=0;a<o;++a){var s=t.charCodeAt(a);s>255&&(Nt(i),Se("String has UTF-16 code units that do not fit in 8 bits")),m[i+4+a]=s}else for(a=0;a<o;++a)m[i+4+a]=t[a];return null!==e&&e.push(Nt,i),i},argPackAdvance:8,readValueFromPointer:nt,destructorFunction:function(e){Nt(e)}})},_embind_register_std_wstring:function(e,t,r){var n,o,i,a,s;r=Re(r),2===t?(n=x,o=U,a=N,i=function(){return M},s=1):4===t&&(n=H,o=C,a=Q,i=function(){return F},s=2),je(e,{name:r,fromWireType:function(e){for(var r,o=F[e>>2],a=i(),c=e+4,u=0;u<=o;++u){var d=e+4+u*t;if(u==o||0==a[d>>s]){var p=n(c,d-c);void 0===r?r=p:(r+=String.fromCharCode(0),r+=p),c=d+t}}return Nt(e),r},toWireType:function(e,n){"string"!=typeof n&&Se("Cannot pass non-string to C++ string type "+r);var i=a(n),c=Ut(4+i+t);return F[c>>2]=i>>s,o(n,c+4,i+t),null!==e&&e.push(Nt,c),c},argPackAdvance:8,readValueFromPointer:nt,destructorFunction:function(e){Nt(e)}})},_embind_register_void:function(e,t){je(e,{isVoid:!0,name:t=Re(t),argPackAdvance:0,fromWireType:function(){},toWireType:function(e,t){}})},abort:function(){te()},emscripten_memcpy_big:function(e,t,r){m.copyWithin(e,t,t+r)},emscripten_resize_heap:function(e){!function(e){te("Cannot enlarge memory arrays to size "+e+" bytes (OOM). Either (1) compile with  -s INITIAL_MEMORY=X  with X higher than the current value "+A.length+", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ")}(e>>>=0)},fd_close:function(e){return te("it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM"),0},fd_seek:function(e,t,r,n,o){te("it should not be possible to operate on streams when !SYSCALLS_REQUIRE_FILESYSTEM")},fd_write:function(e,t,r,n){for(var o=0,i=0;i<r;i++){for(var a=S[t+8*i>>2],s=S[t+(8*i+4)>>2],c=0;c<s;c++)Ft.printChar(e,m[a+c]);o+=s}return S[n>>2]=o,0},getTempRet0:function(){return 0|_},getentropy:function e(t,r){e.randomDevice||(e.randomDevice=function(){if("object"==typeof crypto&&"function"==typeof crypto.getRandomValues){var e=new Uint8Array(1);return function(){return crypto.getRandomValues(e),e[0]}}return function(){te("no cryptographic support found for randomDevice. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: function(array) { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };")}}());for(var n=0;n<r;n++)A[t+n>>0]=e.randomDevice();return 0},invoke_iii:function(e,t,r){var n=Qt();try{return E.get(e)(t,r)}catch(e){if(kt(n),e!==e+0&&"longjmp"!==e)throw e;Wt(1,0)}},invoke_iiii:function(e,t,r,n){var o=Qt();try{return E.get(e)(t,r,n)}catch(e){if(kt(o),e!==e+0&&"longjmp"!==e)throw e;Wt(1,0)}},invoke_vii:function(e,t,r){var n=Qt();try{E.get(e)(t,r)}catch(e){if(kt(n),e!==e+0&&"longjmp"!==e)throw e;Wt(1,0)}},invoke_viii:function(e,t,r,n){var o=Qt();try{E.get(e)(t,r,n)}catch(e){if(kt(o),e!==e+0&&"longjmp"!==e)throw e;Wt(1,0)}},invoke_viiii:function(e,t,r,n,o){var i=Qt();try{E.get(e)(t,r,n,o)}catch(e){if(kt(i),e!==e+0&&"longjmp"!==e)throw e;Wt(1,0)}},memory:f,raise:function(e){var t;return d("Calling stub instead of raise()"),t=It,S[Ct()>>2]=t,p("raise() returning an error as we do not support it"),-1},setTempRet0:function(e){h(0|e)},time:function(e){var t=Date.now()/1e3|0;return e&&(S[e>>2]=t),t}},xt=(function(){var t,r={env:jt,wasi_snapshot_preview1:jt};function n(t,r){var n=t.exports;e.asm=n,O(E=e.asm.__indirect_function_table,"table not found in wasm exports"),function(t){if(Z--,e.monitorRunDependencies&&e.monitorRunDependencies(Z),t?(O(ee[t]),delete ee[t]):d("warning: run dependency removed without ID"),0==Z&&(null!==J&&(clearInterval(J),J=null),K)){var r=K;K=null,r()}}("wasm-instantiate")}t="wasm-instantiate",Z++,e.monitorRunDependencies&&e.monitorRunDependencies(Z),t?(O(!ee[t]),ee[t]=1,null===J&&"undefined"!=typeof setInterval&&(J=setInterval((function(){if(T)return clearInterval(J),void(J=null);var e=!1;for(var t in ee)e||(e=!0,d("still waiting on run dependencies:")),d("dependency: "+t);e&&d("(end of list)")}),1e4))):d("warning: run dependency added without ID");var o=e;function i(t){O(e===o,"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?"),o=null,n(t.instance)}function a(e){return(l||"function"!=typeof fetch?Promise.resolve().then(ce):fetch(se,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+se+"'";return e.arrayBuffer()})).catch((function(){return ce()}))).then((function(e){return WebAssembly.instantiate(e,r)})).then(e,(function(e){d("failed to asynchronously prepare wasm: "+e),te(e)}))}if(e.instantiateWasm)try{return e.instantiateWasm(r,n)}catch(e){return d("Module.instantiateWasm callback failed with error: "+e),!1}!function(){if(l||"function"!=typeof WebAssembly.instantiateStreaming||oe(se)||"function"!=typeof fetch)return a(i);fetch(se,{credentials:"same-origin"}).then((function(e){return WebAssembly.instantiateStreaming(e,r).then(i,(function(e){return d("wasm streaming compile failed: "+e),d("falling back to ArrayBuffer instantiation"),a(i)}))}))}()}(),e.___wasm_call_ctors=ie("__wasm_call_ctors")),Ut=e._malloc=ie("malloc"),Nt=e._free=ie("free"),Ht=e.___getTypeName=ie("__getTypeName"),Ct=(e.___embind_register_native_and_builtin_types=ie("__embind_register_native_and_builtin_types"),e.___errno_location=ie("__errno_location")),Qt=e.stackSave=ie("stackSave"),kt=e.stackRestore=ie("stackRestore"),Lt=e.stackAlloc=ie("stackAlloc"),Wt=e._setThrew=ie("setThrew"),$t=e.__ZSt18uncaught_exceptionv=ie("_ZSt18uncaught_exceptionv");function Gt(r){function n(){Xt||(Xt=!0,e.calledRun=!0,T||($(),O(!V),V=!0,ue(B),$(),ue(z),t(e),e.onRuntimeInitialized&&e.onRuntimeInitialized(),O(!e._main,'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]'),function(){if($(),e.postRun)for("function"==typeof e.postRun&&(e.postRun=[e.postRun]);e.postRun.length;)t=e.postRun.shift(),Y.unshift(t);var t;ue(Y)}()))}r=r||a,Z>0||(W(),function(){if(e.preRun)for("function"==typeof e.preRun&&(e.preRun=[e.preRun]);e.preRun.length;)t=e.preRun.shift(),G.unshift(t);var t;ue(G)}(),Z>0||(e.setStatus?(e.setStatus("Running..."),setTimeout((function(){setTimeout((function(){e.setStatus("")}),1),n()}),1)):n(),T||$()))}if(e.dynCall_jii=ie("dynCall_jii"),e.dynCall_jiji=ie("dynCall_jiji"),e.__growWasmMemory=ie("__growWasmMemory"),Object.getOwnPropertyDescriptor(e,"intArrayFromString")||(e.intArrayFromString=function(){te("'intArrayFromString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"intArrayToString")||(e.intArrayToString=function(){te("'intArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"ccall")||(e.ccall=function(){te("'ccall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"cwrap")||(e.cwrap=function(){te("'cwrap' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"setValue")||(e.setValue=function(){te("'setValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"getValue")||(e.getValue=function(){te("'getValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"allocate")||(e.allocate=function(){te("'allocate' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"UTF8ArrayToString")||(e.UTF8ArrayToString=function(){te("'UTF8ArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"UTF8ToString")||(e.UTF8ToString=function(){te("'UTF8ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"stringToUTF8Array")||(e.stringToUTF8Array=function(){te("'stringToUTF8Array' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"stringToUTF8")||(e.stringToUTF8=function(){te("'stringToUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"lengthBytesUTF8")||(e.lengthBytesUTF8=function(){te("'lengthBytesUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"stackTrace")||(e.stackTrace=function(){te("'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"addOnPreRun")||(e.addOnPreRun=function(){te("'addOnPreRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"addOnInit")||(e.addOnInit=function(){te("'addOnInit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"addOnPreMain")||(e.addOnPreMain=function(){te("'addOnPreMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"addOnExit")||(e.addOnExit=function(){te("'addOnExit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"addOnPostRun")||(e.addOnPostRun=function(){te("'addOnPostRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"writeStringToMemory")||(e.writeStringToMemory=function(){te("'writeStringToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"writeArrayToMemory")||(e.writeArrayToMemory=function(){te("'writeArrayToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"writeAsciiToMemory")||(e.writeAsciiToMemory=function(){te("'writeAsciiToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"addRunDependency")||(e.addRunDependency=function(){te("'addRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")}),Object.getOwnPropertyDescriptor(e,"removeRunDependency")||(e.removeRunDependency=function(){te("'removeRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")}),Object.getOwnPropertyDescriptor(e,"FS_createFolder")||(e.FS_createFolder=function(){te("'FS_createFolder' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"FS_createPath")||(e.FS_createPath=function(){te("'FS_createPath' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")}),Object.getOwnPropertyDescriptor(e,"FS_createDataFile")||(e.FS_createDataFile=function(){te("'FS_createDataFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")}),Object.getOwnPropertyDescriptor(e,"FS_createPreloadedFile")||(e.FS_createPreloadedFile=function(){te("'FS_createPreloadedFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")}),Object.getOwnPropertyDescriptor(e,"FS_createLazyFile")||(e.FS_createLazyFile=function(){te("'FS_createLazyFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")}),Object.getOwnPropertyDescriptor(e,"FS_createLink")||(e.FS_createLink=function(){te("'FS_createLink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"FS_createDevice")||(e.FS_createDevice=function(){te("'FS_createDevice' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")}),Object.getOwnPropertyDescriptor(e,"FS_unlink")||(e.FS_unlink=function(){te("'FS_unlink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")}),Object.getOwnPropertyDescriptor(e,"getLEB")||(e.getLEB=function(){te("'getLEB' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"getFunctionTables")||(e.getFunctionTables=function(){te("'getFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"alignFunctionTables")||(e.alignFunctionTables=function(){te("'alignFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"registerFunctions")||(e.registerFunctions=function(){te("'registerFunctions' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"addFunction")||(e.addFunction=function(){te("'addFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"removeFunction")||(e.removeFunction=function(){te("'removeFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"getFuncWrapper")||(e.getFuncWrapper=function(){te("'getFuncWrapper' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"prettyPrint")||(e.prettyPrint=function(){te("'prettyPrint' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"makeBigInt")||(e.makeBigInt=function(){te("'makeBigInt' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"dynCall")||(e.dynCall=function(){te("'dynCall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"getCompilerSetting")||(e.getCompilerSetting=function(){te("'getCompilerSetting' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"print")||(e.print=function(){te("'print' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"printErr")||(e.printErr=function(){te("'printErr' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"getTempRet0")||(e.getTempRet0=function(){te("'getTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"setTempRet0")||(e.setTempRet0=function(){te("'setTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"callMain")||(e.callMain=function(){te("'callMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"abort")||(e.abort=function(){te("'abort' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"stringToNewUTF8")||(e.stringToNewUTF8=function(){te("'stringToNewUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"abortOnCannotGrowMemory")||(e.abortOnCannotGrowMemory=function(){te("'abortOnCannotGrowMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"emscripten_realloc_buffer")||(e.emscripten_realloc_buffer=function(){te("'emscripten_realloc_buffer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"ENV")||(e.ENV=function(){te("'ENV' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"ERRNO_CODES")||(e.ERRNO_CODES=function(){te("'ERRNO_CODES' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"ERRNO_MESSAGES")||(e.ERRNO_MESSAGES=function(){te("'ERRNO_MESSAGES' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"setErrNo")||(e.setErrNo=function(){te("'setErrNo' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"DNS")||(e.DNS=function(){te("'DNS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"getHostByName")||(e.getHostByName=function(){te("'getHostByName' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"GAI_ERRNO_MESSAGES")||(e.GAI_ERRNO_MESSAGES=function(){te("'GAI_ERRNO_MESSAGES' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"Protocols")||(e.Protocols=function(){te("'Protocols' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"Sockets")||(e.Sockets=function(){te("'Sockets' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"getRandomDevice")||(e.getRandomDevice=function(){te("'getRandomDevice' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"traverseStack")||(e.traverseStack=function(){te("'traverseStack' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"UNWIND_CACHE")||(e.UNWIND_CACHE=function(){te("'UNWIND_CACHE' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"withBuiltinMalloc")||(e.withBuiltinMalloc=function(){te("'withBuiltinMalloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"readAsmConstArgsArray")||(e.readAsmConstArgsArray=function(){te("'readAsmConstArgsArray' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"readAsmConstArgs")||(e.readAsmConstArgs=function(){te("'readAsmConstArgs' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"mainThreadEM_ASM")||(e.mainThreadEM_ASM=function(){te("'mainThreadEM_ASM' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"jstoi_q")||(e.jstoi_q=function(){te("'jstoi_q' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"jstoi_s")||(e.jstoi_s=function(){te("'jstoi_s' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"getExecutableName")||(e.getExecutableName=function(){te("'getExecutableName' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"listenOnce")||(e.listenOnce=function(){te("'listenOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"autoResumeAudioContext")||(e.autoResumeAudioContext=function(){te("'autoResumeAudioContext' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"dynCallLegacy")||(e.dynCallLegacy=function(){te("'dynCallLegacy' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"getDynCaller")||(e.getDynCaller=function(){te("'getDynCaller' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"dynCall")||(e.dynCall=function(){te("'dynCall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"callRuntimeCallbacks")||(e.callRuntimeCallbacks=function(){te("'callRuntimeCallbacks' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"abortStackOverflow")||(e.abortStackOverflow=function(){te("'abortStackOverflow' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"reallyNegative")||(e.reallyNegative=function(){te("'reallyNegative' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"unSign")||(e.unSign=function(){te("'unSign' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"reSign")||(e.reSign=function(){te("'reSign' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"formatString")||(e.formatString=function(){te("'formatString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"PATH")||(e.PATH=function(){te("'PATH' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"PATH_FS")||(e.PATH_FS=function(){te("'PATH_FS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"SYSCALLS")||(e.SYSCALLS=function(){te("'SYSCALLS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"syscallMmap2")||(e.syscallMmap2=function(){te("'syscallMmap2' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"syscallMunmap")||(e.syscallMunmap=function(){te("'syscallMunmap' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"flush_NO_FILESYSTEM")||(e.flush_NO_FILESYSTEM=function(){te("'flush_NO_FILESYSTEM' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"JSEvents")||(e.JSEvents=function(){te("'JSEvents' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"specialHTMLTargets")||(e.specialHTMLTargets=function(){te("'specialHTMLTargets' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"maybeCStringToJsString")||(e.maybeCStringToJsString=function(){te("'maybeCStringToJsString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"findEventTarget")||(e.findEventTarget=function(){te("'findEventTarget' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"findCanvasEventTarget")||(e.findCanvasEventTarget=function(){te("'findCanvasEventTarget' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"polyfillSetImmediate")||(e.polyfillSetImmediate=function(){te("'polyfillSetImmediate' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"demangle")||(e.demangle=function(){te("'demangle' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"demangleAll")||(e.demangleAll=function(){te("'demangleAll' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"jsStackTrace")||(e.jsStackTrace=function(){te("'jsStackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"stackTrace")||(e.stackTrace=function(){te("'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"getEnvStrings")||(e.getEnvStrings=function(){te("'getEnvStrings' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"checkWasiClock")||(e.checkWasiClock=function(){te("'checkWasiClock' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"writeI53ToI64")||(e.writeI53ToI64=function(){te("'writeI53ToI64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"writeI53ToI64Clamped")||(e.writeI53ToI64Clamped=function(){te("'writeI53ToI64Clamped' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"writeI53ToI64Signaling")||(e.writeI53ToI64Signaling=function(){te("'writeI53ToI64Signaling' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"writeI53ToU64Clamped")||(e.writeI53ToU64Clamped=function(){te("'writeI53ToU64Clamped' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"writeI53ToU64Signaling")||(e.writeI53ToU64Signaling=function(){te("'writeI53ToU64Signaling' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"readI53FromI64")||(e.readI53FromI64=function(){te("'readI53FromI64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"readI53FromU64")||(e.readI53FromU64=function(){te("'readI53FromU64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"convertI32PairToI53")||(e.convertI32PairToI53=function(){te("'convertI32PairToI53' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"convertU32PairToI53")||(e.convertU32PairToI53=function(){te("'convertU32PairToI53' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"exceptionLast")||(e.exceptionLast=function(){te("'exceptionLast' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"exceptionCaught")||(e.exceptionCaught=function(){te("'exceptionCaught' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"ExceptionInfoAttrs")||(e.ExceptionInfoAttrs=function(){te("'ExceptionInfoAttrs' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"ExceptionInfo")||(e.ExceptionInfo=function(){te("'ExceptionInfo' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"CatchInfo")||(e.CatchInfo=function(){te("'CatchInfo' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"exception_addRef")||(e.exception_addRef=function(){te("'exception_addRef' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"exception_decRef")||(e.exception_decRef=function(){te("'exception_decRef' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"Browser")||(e.Browser=function(){te("'Browser' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"funcWrappers")||(e.funcWrappers=function(){te("'funcWrappers' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"getFuncWrapper")||(e.getFuncWrapper=function(){te("'getFuncWrapper' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"setMainLoop")||(e.setMainLoop=function(){te("'setMainLoop' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"tempFixedLengthArray")||(e.tempFixedLengthArray=function(){te("'tempFixedLengthArray' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"miniTempWebGLFloatBuffers")||(e.miniTempWebGLFloatBuffers=function(){te("'miniTempWebGLFloatBuffers' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"heapObjectForWebGLType")||(e.heapObjectForWebGLType=function(){te("'heapObjectForWebGLType' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"heapAccessShiftForWebGLHeap")||(e.heapAccessShiftForWebGLHeap=function(){te("'heapAccessShiftForWebGLHeap' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"GL")||(e.GL=function(){te("'GL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"emscriptenWebGLGet")||(e.emscriptenWebGLGet=function(){te("'emscriptenWebGLGet' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"computeUnpackAlignedImageSize")||(e.computeUnpackAlignedImageSize=function(){te("'computeUnpackAlignedImageSize' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"emscriptenWebGLGetTexPixelData")||(e.emscriptenWebGLGetTexPixelData=function(){te("'emscriptenWebGLGetTexPixelData' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"emscriptenWebGLGetUniform")||(e.emscriptenWebGLGetUniform=function(){te("'emscriptenWebGLGetUniform' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"emscriptenWebGLGetVertexAttrib")||(e.emscriptenWebGLGetVertexAttrib=function(){te("'emscriptenWebGLGetVertexAttrib' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"writeGLArray")||(e.writeGLArray=function(){te("'writeGLArray' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"AL")||(e.AL=function(){te("'AL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"SDL_unicode")||(e.SDL_unicode=function(){te("'SDL_unicode' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"SDL_ttfContext")||(e.SDL_ttfContext=function(){te("'SDL_ttfContext' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"SDL_audio")||(e.SDL_audio=function(){te("'SDL_audio' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"SDL")||(e.SDL=function(){te("'SDL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"SDL_gfx")||(e.SDL_gfx=function(){te("'SDL_gfx' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"GLUT")||(e.GLUT=function(){te("'GLUT' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"EGL")||(e.EGL=function(){te("'EGL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"GLFW_Window")||(e.GLFW_Window=function(){te("'GLFW_Window' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"GLFW")||(e.GLFW=function(){te("'GLFW' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"GLEW")||(e.GLEW=function(){te("'GLEW' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"IDBStore")||(e.IDBStore=function(){te("'IDBStore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"runAndAbortIfError")||(e.runAndAbortIfError=function(){te("'runAndAbortIfError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"emval_handle_array")||(e.emval_handle_array=function(){te("'emval_handle_array' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"emval_free_list")||(e.emval_free_list=function(){te("'emval_free_list' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"emval_symbols")||(e.emval_symbols=function(){te("'emval_symbols' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"init_emval")||(e.init_emval=function(){te("'init_emval' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"count_emval_handles")||(e.count_emval_handles=function(){te("'count_emval_handles' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"get_first_emval")||(e.get_first_emval=function(){te("'get_first_emval' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"getStringOrSymbol")||(e.getStringOrSymbol=function(){te("'getStringOrSymbol' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"requireHandle")||(e.requireHandle=function(){te("'requireHandle' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"emval_newers")||(e.emval_newers=function(){te("'emval_newers' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"craftEmvalAllocator")||(e.craftEmvalAllocator=function(){te("'craftEmvalAllocator' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"emval_get_global")||(e.emval_get_global=function(){te("'emval_get_global' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"emval_methodCallers")||(e.emval_methodCallers=function(){te("'emval_methodCallers' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"InternalError")||(e.InternalError=function(){te("'InternalError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"BindingError")||(e.BindingError=function(){te("'BindingError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"UnboundTypeError")||(e.UnboundTypeError=function(){te("'UnboundTypeError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"PureVirtualError")||(e.PureVirtualError=function(){te("'PureVirtualError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"init_embind")||(e.init_embind=function(){te("'init_embind' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"throwInternalError")||(e.throwInternalError=function(){te("'throwInternalError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"throwBindingError")||(e.throwBindingError=function(){te("'throwBindingError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"throwUnboundTypeError")||(e.throwUnboundTypeError=function(){te("'throwUnboundTypeError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"ensureOverloadTable")||(e.ensureOverloadTable=function(){te("'ensureOverloadTable' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"exposePublicSymbol")||(e.exposePublicSymbol=function(){te("'exposePublicSymbol' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"replacePublicSymbol")||(e.replacePublicSymbol=function(){te("'replacePublicSymbol' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"extendError")||(e.extendError=function(){te("'extendError' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"createNamedFunction")||(e.createNamedFunction=function(){te("'createNamedFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"registeredInstances")||(e.registeredInstances=function(){te("'registeredInstances' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"getBasestPointer")||(e.getBasestPointer=function(){te("'getBasestPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"registerInheritedInstance")||(e.registerInheritedInstance=function(){te("'registerInheritedInstance' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"unregisterInheritedInstance")||(e.unregisterInheritedInstance=function(){te("'unregisterInheritedInstance' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"getInheritedInstance")||(e.getInheritedInstance=function(){te("'getInheritedInstance' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"getInheritedInstanceCount")||(e.getInheritedInstanceCount=function(){te("'getInheritedInstanceCount' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"getLiveInheritedInstances")||(e.getLiveInheritedInstances=function(){te("'getLiveInheritedInstances' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"registeredTypes")||(e.registeredTypes=function(){te("'registeredTypes' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"awaitingDependencies")||(e.awaitingDependencies=function(){te("'awaitingDependencies' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"typeDependencies")||(e.typeDependencies=function(){te("'typeDependencies' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"registeredPointers")||(e.registeredPointers=function(){te("'registeredPointers' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"registerType")||(e.registerType=function(){te("'registerType' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"whenDependentTypesAreResolved")||(e.whenDependentTypesAreResolved=function(){te("'whenDependentTypesAreResolved' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"embind_charCodes")||(e.embind_charCodes=function(){te("'embind_charCodes' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"embind_init_charCodes")||(e.embind_init_charCodes=function(){te("'embind_init_charCodes' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"readLatin1String")||(e.readLatin1String=function(){te("'readLatin1String' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"getTypeName")||(e.getTypeName=function(){te("'getTypeName' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"heap32VectorToArray")||(e.heap32VectorToArray=function(){te("'heap32VectorToArray' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"requireRegisteredType")||(e.requireRegisteredType=function(){te("'requireRegisteredType' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"getShiftFromSize")||(e.getShiftFromSize=function(){te("'getShiftFromSize' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"integerReadValueFromPointer")||(e.integerReadValueFromPointer=function(){te("'integerReadValueFromPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"enumReadValueFromPointer")||(e.enumReadValueFromPointer=function(){te("'enumReadValueFromPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"floatReadValueFromPointer")||(e.floatReadValueFromPointer=function(){te("'floatReadValueFromPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"simpleReadValueFromPointer")||(e.simpleReadValueFromPointer=function(){te("'simpleReadValueFromPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"runDestructors")||(e.runDestructors=function(){te("'runDestructors' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"new_")||(e.new_=function(){te("'new_' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"craftInvokerFunction")||(e.craftInvokerFunction=function(){te("'craftInvokerFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"embind__requireFunction")||(e.embind__requireFunction=function(){te("'embind__requireFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"tupleRegistrations")||(e.tupleRegistrations=function(){te("'tupleRegistrations' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"structRegistrations")||(e.structRegistrations=function(){te("'structRegistrations' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"genericPointerToWireType")||(e.genericPointerToWireType=function(){te("'genericPointerToWireType' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"constNoSmartPtrRawPointerToWireType")||(e.constNoSmartPtrRawPointerToWireType=function(){te("'constNoSmartPtrRawPointerToWireType' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"nonConstNoSmartPtrRawPointerToWireType")||(e.nonConstNoSmartPtrRawPointerToWireType=function(){te("'nonConstNoSmartPtrRawPointerToWireType' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"init_RegisteredPointer")||(e.init_RegisteredPointer=function(){te("'init_RegisteredPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"RegisteredPointer")||(e.RegisteredPointer=function(){te("'RegisteredPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"RegisteredPointer_getPointee")||(e.RegisteredPointer_getPointee=function(){te("'RegisteredPointer_getPointee' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"RegisteredPointer_destructor")||(e.RegisteredPointer_destructor=function(){te("'RegisteredPointer_destructor' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"RegisteredPointer_deleteObject")||(e.RegisteredPointer_deleteObject=function(){te("'RegisteredPointer_deleteObject' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"RegisteredPointer_fromWireType")||(e.RegisteredPointer_fromWireType=function(){te("'RegisteredPointer_fromWireType' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"runDestructor")||(e.runDestructor=function(){te("'runDestructor' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"releaseClassHandle")||(e.releaseClassHandle=function(){te("'releaseClassHandle' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"finalizationGroup")||(e.finalizationGroup=function(){te("'finalizationGroup' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"detachFinalizer_deps")||(e.detachFinalizer_deps=function(){te("'detachFinalizer_deps' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"detachFinalizer")||(e.detachFinalizer=function(){te("'detachFinalizer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"attachFinalizer")||(e.attachFinalizer=function(){te("'attachFinalizer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"makeClassHandle")||(e.makeClassHandle=function(){te("'makeClassHandle' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"init_ClassHandle")||(e.init_ClassHandle=function(){te("'init_ClassHandle' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"ClassHandle")||(e.ClassHandle=function(){te("'ClassHandle' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"ClassHandle_isAliasOf")||(e.ClassHandle_isAliasOf=function(){te("'ClassHandle_isAliasOf' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"throwInstanceAlreadyDeleted")||(e.throwInstanceAlreadyDeleted=function(){te("'throwInstanceAlreadyDeleted' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"ClassHandle_clone")||(e.ClassHandle_clone=function(){te("'ClassHandle_clone' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"ClassHandle_delete")||(e.ClassHandle_delete=function(){te("'ClassHandle_delete' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"deletionQueue")||(e.deletionQueue=function(){te("'deletionQueue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"ClassHandle_isDeleted")||(e.ClassHandle_isDeleted=function(){te("'ClassHandle_isDeleted' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"ClassHandle_deleteLater")||(e.ClassHandle_deleteLater=function(){te("'ClassHandle_deleteLater' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"flushPendingDeletes")||(e.flushPendingDeletes=function(){te("'flushPendingDeletes' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"delayFunction")||(e.delayFunction=function(){te("'delayFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"setDelayFunction")||(e.setDelayFunction=function(){te("'setDelayFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"RegisteredClass")||(e.RegisteredClass=function(){te("'RegisteredClass' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"shallowCopyInternalPointer")||(e.shallowCopyInternalPointer=function(){te("'shallowCopyInternalPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"downcastPointer")||(e.downcastPointer=function(){te("'downcastPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"upcastPointer")||(e.upcastPointer=function(){te("'upcastPointer' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"validateThis")||(e.validateThis=function(){te("'validateThis' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"char_0")||(e.char_0=function(){te("'char_0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"char_9")||(e.char_9=function(){te("'char_9' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"makeLegalFunctionName")||(e.makeLegalFunctionName=function(){te("'makeLegalFunctionName' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"warnOnce")||(e.warnOnce=function(){te("'warnOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"stackSave")||(e.stackSave=function(){te("'stackSave' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"stackRestore")||(e.stackRestore=function(){te("'stackRestore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"stackAlloc")||(e.stackAlloc=function(){te("'stackAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"AsciiToString")||(e.AsciiToString=function(){te("'AsciiToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"stringToAscii")||(e.stringToAscii=function(){te("'stringToAscii' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"UTF16ToString")||(e.UTF16ToString=function(){te("'UTF16ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"stringToUTF16")||(e.stringToUTF16=function(){te("'stringToUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"lengthBytesUTF16")||(e.lengthBytesUTF16=function(){te("'lengthBytesUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"UTF32ToString")||(e.UTF32ToString=function(){te("'UTF32ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"stringToUTF32")||(e.stringToUTF32=function(){te("'stringToUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"lengthBytesUTF32")||(e.lengthBytesUTF32=function(){te("'lengthBytesUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"allocateUTF8")||(e.allocateUTF8=function(){te("'allocateUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),Object.getOwnPropertyDescriptor(e,"allocateUTF8OnStack")||(e.allocateUTF8OnStack=function(){te("'allocateUTF8OnStack' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}),e.writeStackCookie=W,e.checkStackCookie=$,Object.getOwnPropertyDescriptor(e,"ALLOC_NORMAL")||Object.defineProperty(e,"ALLOC_NORMAL",{configurable:!0,get:function(){te("'ALLOC_NORMAL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}}),Object.getOwnPropertyDescriptor(e,"ALLOC_STACK")||Object.defineProperty(e,"ALLOC_STACK",{configurable:!0,get:function(){te("'ALLOC_STACK' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}}),K=function e(){Xt||Gt(),Xt||(K=e)},e.run=Gt,e.preInit)for("function"==typeof e.preInit&&(e.preInit=[e.preInit]);e.preInit.length>0;)e.preInit.pop()();return Gt(),e.ready});t.default=o},function(e,t,r){"use strict";var n,o=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,"__esModule",{value:!0}),t.LogEndpoint=void 0;var i=function(e){function t(t,r){return void 0===r&&(r="logs"),e.call(this,t,r)||this}return o(t,e),t}(r(0).ResourceEndpoint);t.LogEndpoint=i}])}));

/***/ }),

/***/ "./node_modules/ts-loader/index.js!./background/worker.ts":
/*!****************************************************************!*\
  !*** ./node_modules/ts-loader/index.js!./background/worker.ts ***!
  \****************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _harpokrat_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @harpokrat/client */ "./node_modules/@harpokrat/client/dist/bundles/harpokrat-client.js");
/* harmony import */ var _harpokrat_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_harpokrat_client__WEBPACK_IMPORTED_MODULE_0__);
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};

var ctx = self;
var wasmUrl = 'https://static.harpokrat.com/hcl/hcl4.wasm';
var apiUrl = 'https://api.harpokrat.com/v1/';
var client = new _harpokrat_client__WEBPACK_IMPORTED_MODULE_0__.HarpokratApi({
    auth: {
        email: '',
        password: ''
    },
    apiUrl: apiUrl,
    hclWasmUrl: wasmUrl,
    requester: undefined,
});
client.hcl.init();
var current_token;
var login = function (email, password) { return __awaiter(void 0, void 0, void 0, function () {
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                client.auth = { email: email, password: password };
                return [4 /*yield*/, client.jsonWebTokens.create()];
            case 1:
                current_token = _a.sent();
                client.accessToken = current_token.attributes.token;
                ctx.postMessage({ message: "debug", token: current_token.attributes.token });
                ctx.postMessage({ message: "login-response", token: current_token });
                return [2 /*return*/];
        }
    });
}); };
var getAllUserPasswords = function () { return __awaiter(void 0, void 0, void 0, function () {
    var current_user_id, passwords, hclModule, vaults, _i, vaults_1, vault, secrets, _a, secrets_1, secret, aled, password;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0:
                current_user_id = current_token.relationships.user.data.id;
                passwords = [];
                return [4 /*yield*/, client.hcl.getModule()];
            case 1:
                hclModule = _b.sent();
                return [4 /*yield*/, client.users.resource(current_user_id, 'vaults').readMany({
                        page: 1,
                        size: 100,
                    })
                    // ctx.postMessage({ message: "debug", vaults });
                ];
            case 2:
                vaults = _b.sent();
                _i = 0, vaults_1 = vaults;
                _b.label = 3;
            case 3:
                if (!(_i < vaults_1.length)) return [3 /*break*/, 6];
                vault = vaults_1[_i];
                return [4 /*yield*/, client.vaults.resource(vault.id, 'secrets').readMany({
                        page: 1,
                        size: 200,
                    })
                    // ctx.postMessage({ message: "debug", secrets });
                ];
            case 4:
                secrets = _b.sent();
                // ctx.postMessage({ message: "debug", secrets });
                for (_a = 0, secrets_1 = secrets; _a < secrets_1.length; _a++) {
                    secret = secrets_1[_a];
                    try {
                        aled = hclModule.Secret.Deserialize("", secret.attributes.content);
                        password = hclModule.CastSecretToPassword(aled);
                        // ctx.postMessage({
                        //     message: "debug",
                        //     secrettypename: password.GetSecretTypeName(),
                        //     name: password.GetName(),
                        //     domain: password.GetDomain(),
                        //     username: password.GetLogin(),
                        //     password: password.GetPassword(),
                        // });
                        passwords.push({
                            secret: secret,
                            name: password.GetName(),
                            domain: password.GetDomain(),
                            username: password.GetLogin(),
                            password: password.GetPassword(),
                        });
                    }
                    catch (e) {
                        ctx.postMessage({ message: "debug-error", err: e.message, stack: e.stack });
                    }
                }
                _b.label = 5;
            case 5:
                _i++;
                return [3 /*break*/, 3];
            case 6:
                ctx.postMessage({ message: "getAllUserPasswords-response", passwords: passwords });
                return [2 /*return*/];
        }
    });
}); };
var addPassword = function (account) { return __awaiter(void 0, void 0, void 0, function () {
    var current_user_id, hclModule, vaults, vault, secrets_resource, s, serialized, aled, e_1;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                current_user_id = current_token.relationships.user.data.id;
                return [4 /*yield*/, client.hcl.getModule()];
            case 1:
                hclModule = _a.sent();
                return [4 /*yield*/, client.users.resource(current_user_id, 'vaults').readMany({
                        page: 1,
                        size: 100,
                    })];
            case 2:
                vaults = _a.sent();
                if (!(vaults.length != 0)) return [3 /*break*/, 6];
                vault = vaults[0];
                secrets_resource = client.vaults.resource(vault.id, 'secrets');
                s = new hclModule.Password();
                s.InitializePlainCipher();
                s.SetName(account.name);
                s.SetDomain(account.domain);
                s.SetLogin(account.username);
                s.SetPassword(account.password);
                serialized = s.Serialize('');
                _a.label = 3;
            case 3:
                _a.trys.push([3, 5, , 6]);
                return [4 /*yield*/, client.secrets.create({
                        attributes: {
                            content: serialized,
                            private: true,
                        },
                        type: 'secrets',
                        relationships: { owner: { data: vault } }
                    })];
            case 4:
                aled = _a.sent();
                return [3 /*break*/, 6];
            case 5:
                e_1 = _a.sent();
                ctx.postMessage({ message: "debug-error", err: e_1.message, stack: e_1.stack });
                return [3 /*break*/, 6];
            case 6:
                ctx.postMessage({ message: "addPassword-response", success: true });
                return [2 /*return*/];
        }
    });
}); };
var modifyPassword = function (account) { return __awaiter(void 0, void 0, void 0, function () {
    var current_user_id, hclModule, vaults, vault, secrets_resource, s, serialized, aled, e_2;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                current_user_id = current_token.relationships.user.data.id;
                return [4 /*yield*/, client.hcl.getModule()];
            case 1:
                hclModule = _a.sent();
                return [4 /*yield*/, client.users.resource(current_user_id, 'vaults').readMany({
                        page: 1,
                        size: 100,
                    })];
            case 2:
                vaults = _a.sent();
                if (!(vaults.length != 0)) return [3 /*break*/, 6];
                vault = vaults[0];
                secrets_resource = client.vaults.resource(vault.id, 'secrets');
                s = new hclModule.Password();
                s.InitializePlainCipher();
                s.SetName(account.name);
                s.SetDomain(account.domain);
                s.SetLogin(account.username);
                s.SetPassword(account.password);
                serialized = s.Serialize('');
                _a.label = 3;
            case 3:
                _a.trys.push([3, 5, , 6]);
                ctx.postMessage({ message: "debug", aled: "ALED OSKOUR" });
                return [4 /*yield*/, client.secrets.update(account.secret.id, __assign(__assign({}, account.secret), { attributes: {
                            content: serialized,
                        }, relationships: undefined }))];
            case 4:
                aled = _a.sent();
                return [3 /*break*/, 6];
            case 5:
                e_2 = _a.sent();
                ctx.postMessage({ message: "debug-error", err: e_2.message, stack: e_2.stack });
                return [3 /*break*/, 6];
            case 6:
                ctx.postMessage({ message: "modifyPassword-response", success: true });
                return [2 /*return*/];
        }
    });
}); };
ctx.onmessage = function (ev) { return __awaiter(void 0, void 0, void 0, function () {
    var e_3;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                _a.trys.push([0, 9, , 10]);
                if (!(ev.data.message == "login")) return [3 /*break*/, 2];
                return [4 /*yield*/, login(ev.data.params.email, ev.data.params.password)];
            case 1:
                _a.sent();
                _a.label = 2;
            case 2:
                if (!(ev.data.message == "getAllUserPasswords")) return [3 /*break*/, 4];
                return [4 /*yield*/, getAllUserPasswords()];
            case 3:
                _a.sent();
                _a.label = 4;
            case 4:
                if (!(ev.data.message == "addPassword")) return [3 /*break*/, 6];
                return [4 /*yield*/, addPassword(ev.data.params)];
            case 5:
                _a.sent();
                _a.label = 6;
            case 6:
                if (!(ev.data.message == "modifyPassword")) return [3 /*break*/, 8];
                return [4 /*yield*/, modifyPassword(ev.data.params)];
            case 7:
                _a.sent();
                _a.label = 8;
            case 8: return [3 /*break*/, 10];
            case 9:
                e_3 = _a.sent();
                ctx.postMessage({
                    message: "workerException", err: e_3.message, stack: e_3.stack
                });
                return [3 /*break*/, 10];
            case 10: return [2 /*return*/];
        }
    });
}); };


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => module['default'] :
/******/ 				() => module;
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./node_modules/ts-loader/index.js!./background/worker.ts");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,